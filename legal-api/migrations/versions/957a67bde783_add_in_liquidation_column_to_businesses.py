"""Add in_liquidation column to businesses

Revision ID: 957a67bde783
Revises: 1ec937c2466e
Create Date: 2025-05-29 11:43:23.869675

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '957a67bde783'
down_revision = '1ec937c2466e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('businesses_bak')
    op.drop_table('offices_held_version')
    op.drop_table('sent_to_gazette')
    op.drop_table('temp_businesses')
    op.drop_table('auth_users')
    op.drop_table('temp2_businesses')
    op.drop_table('x')
    op.drop_table('offices_held')
    op.drop_index('ix_addresses_office_id', table_name='addresses')
    op.drop_index('ix_addresses_version_office_id', table_name='addresses_version')
    op.alter_column('aliases_version', 'alias',
               existing_type=sa.VARCHAR(length=1000),
               nullable=True,
               autoincrement=False)
    op.alter_column('aliases_version', 'type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamating_businesses', 'role',
               existing_type=postgresql.ENUM('amalgamating', 'holding', 'primary', name='amalgamating_business_role'),
               type_=sa.Enum('amalgamating', 'holding', 'primary', name='role'),
               existing_nullable=False)
    op.create_index(op.f('ix_amalgamating_businesses_business_id'), 'amalgamating_businesses', ['business_id'], unique=False)
    op.drop_constraint('amalgamating_business_amalgamation_id_fkey', 'amalgamating_businesses', type_='foreignkey')
    op.create_foreign_key(None, 'amalgamating_businesses', 'amalgamations', ['amalgamation_id'], ['id'], ondelete='CASCADE')
    op.alter_column('amalgamating_businesses_version', 'role',
               existing_type=postgresql.ENUM('amalgamating', 'holding', 'primary', name='amalgamating_business_role'),
               type_=sa.Enum('amalgamating', 'holding', 'primary', name='role'),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamating_businesses_version', 'amalgamation_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.drop_index('ix_amalgamating_businesses_version_amalgamation_id', table_name='amalgamating_businesses_version')
    op.drop_constraint('amalgamating_businesses_version_business_id_fkey', 'amalgamating_businesses_version', type_='foreignkey')
    op.alter_column('amalgamations', 'amalgamation_type',
               existing_type=postgresql.ENUM('regular', 'vertical', 'horizontal', 'unknown', name='amalgamation_type'),
               type_=sa.Enum('regular', 'vertical', 'horizontal', 'unknown', name='amalgamationtypes'),
               existing_nullable=False)
    op.alter_column('amalgamations', 'court_approval',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('amalgamations', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_amalgamations_business_id'), 'amalgamations', ['business_id'], unique=False)
    op.alter_column('amalgamations_version', 'amalgamation_type',
               existing_type=postgresql.ENUM('regular', 'vertical', 'horizontal', 'unknown', name='amalgamation_type'),
               type_=sa.Enum('regular', 'vertical', 'horizontal', 'unknown', name='amalgamationtypes'),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'amalgamation_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'court_approval',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'filing_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.drop_index('ix_amalgamations_version_filing_id', table_name='amalgamations_version')
    op.drop_constraint('amalgamations_version_filing_id_fkey', 'amalgamations_version', type_='foreignkey')
    op.drop_constraint('amalgamations_version_business_id_fkey', 'amalgamations_version', type_='foreignkey')
    op.alter_column('batch_processing', 'step',
               existing_type=postgresql.ENUM('WARNING_LEVEL_1', 'WARNING_LEVEL_2', 'DISSOLUTION', name='batch_processing_step'),
               type_=sa.Enum('WARNING_LEVEL_1', 'WARNING_LEVEL_2', 'DISSOLUTION', name='batchprocessingstep'),
               existing_nullable=False)
    op.alter_column('batch_processing', 'status',
               existing_type=postgresql.ENUM('COMPLETED', 'ERROR', 'HOLD', 'PROCESSING', 'QUEUED', 'WITHDRAWN', name='batch_processing_status'),
               type_=sa.Enum('HOLD', 'PROCESSING', 'QUEUED', 'WITHDRAWN', 'COMPLETED', 'ERROR', name='batchprocessingstatus'),
               existing_nullable=False)
    op.alter_column('batch_processing', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('batch_processing', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_batch_processing_batch_id'), 'batch_processing', ['batch_id'], unique=False)
    op.create_index(op.f('ix_batch_processing_business_id'), 'batch_processing', ['business_id'], unique=False)
    op.create_index(op.f('ix_batch_processing_filing_id'), 'batch_processing', ['filing_id'], unique=False)
    op.alter_column('batches', 'batch_type',
               existing_type=postgresql.ENUM('INVOLUNTARY_DISSOLUTION', name='batch_type'),
               type_=sa.Enum('INVOLUNTARY_DISSOLUTION', name='batchtype'),
               existing_nullable=False)
    op.alter_column('batches', 'status',
               existing_type=postgresql.ENUM('HOLD', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'ERROR', name='batch_status'),
               type_=sa.Enum('HOLD', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'ERROR', name='batchstatus'),
               existing_nullable=False)
    op.alter_column('batches', 'start_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.add_column('businesses', sa.Column('in_liquidation', sa.Boolean(), nullable=True))
    op.alter_column('businesses', 'naics_description',
               existing_type=sa.VARCHAR(length=300),
               type_=sa.String(length=150),
               existing_nullable=True)
    op.drop_constraint('businesses_state_filing_id_fkey', 'businesses', type_='foreignkey')
    op.add_column('businesses_version', sa.Column('in_liquidation', sa.Boolean(), autoincrement=False, nullable=True))
    op.alter_column('businesses_version', 'naics_description',
               existing_type=sa.VARCHAR(length=300),
               type_=sa.String(length=150),
               existing_nullable=True,
               autoincrement=False)
    op.create_unique_constraint(None, 'configurations', ['name'])
    op.alter_column('consent_continuation_outs', 'consent_type',
               existing_type=postgresql.ENUM('continuation_out', 'amalgamation_out', name='consent_out_types'),
               type_=sa.Enum('continuation_out', 'amalgamation_out', name='consenttypes'),
               existing_nullable=False,
               existing_server_default=sa.text("'continuation_out'::consent_out_types"))
    op.create_unique_constraint(None, 'consent_continuation_outs', ['id'])
    op.drop_constraint('dc_business_users_business_id_user_id_uq', 'dc_business_users', type_='unique')
    op.alter_column('dc_connections', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('dc_connections', 'business_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('dc_credentials', 'connection_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('dc_credentials', 'definition_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('dc_credentials', 'business_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('documents_version', 'type',
               existing_type=sa.VARCHAR(length=30),
               nullable=True,
               autoincrement=False)
    op.alter_column('documents_version', 'file_key',
               existing_type=sa.VARCHAR(length=100),
               nullable=True,
               autoincrement=False)
    op.drop_constraint('documents_version_filing_id_fkey', 'documents_version', type_='foreignkey')
    op.drop_constraint('documents_version_business_id_fkey', 'documents_version', type_='foreignkey')
    op.alter_column('filings', 'hide_in_ledger',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('filings', 'withdrawal_pending',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index('filings_pkey_ccold', table_name='filings')
    op.drop_index('filings_pkey_ccold1', table_name='filings')
    op.drop_index('filings_pkey_ccold2', table_name='filings')
    op.drop_index('filings_pkey_ccold3', table_name='filings')
    op.drop_index('ix_filings_business_id', table_name='filings')
    op.drop_index('ix_filings_business_id_ccold', table_name='filings')
    op.drop_index('ix_filings_business_id_ccold1', table_name='filings')
    op.drop_index('ix_filings_business_id_ccold2', table_name='filings')
    op.drop_index('ix_filings_business_id_ccold3', table_name='filings')
    op.drop_index('ix_filings_filing_type', table_name='filings')
    op.drop_index('ix_filings_filing_type_ccold', table_name='filings')
    op.drop_index('ix_filings_filing_type_ccold1', table_name='filings')
    op.drop_index('ix_filings_filing_type_ccold2', table_name='filings')
    op.drop_index('ix_filings_filing_type_ccold3', table_name='filings')
    op.drop_index('ix_filings_status', table_name='filings')
    op.drop_index('ix_filings_status_ccold', table_name='filings')
    op.drop_index('ix_filings_status_ccold1', table_name='filings')
    op.drop_index('ix_filings_status_ccold2', table_name='filings')
    op.drop_index('ix_filings_status_ccold3', table_name='filings')
    op.drop_index('ix_filings_submitter_id', table_name='filings')
    op.drop_index('ix_filings_submitter_id_ccold', table_name='filings')
    op.drop_index('ix_filings_submitter_id_ccold1', table_name='filings')
    op.drop_index('ix_filings_submitter_id_ccold2', table_name='filings')
    op.drop_index('ix_filings_submitter_id_ccold3', table_name='filings')
    op.create_index(op.f('ix_furnishing_groups_xml_payload_id'), 'furnishing_groups', ['xml_payload_id'], unique=False)
    op.alter_column('furnishings', 'furnishing_type',
               existing_type=postgresql.ENUM('EMAIL', 'MAIL', 'GAZETTE', name='furnishing_type'),
               type_=sa.Enum('EMAIL', 'MAIL', 'GAZETTE', name='furnishingtype'),
               existing_nullable=False)
    op.alter_column('furnishings', 'furnishing_name',
               existing_type=postgresql.ENUM('DISSOLUTION_COMMENCEMENT_NO_AR', 'DISSOLUTION_COMMENCEMENT_NO_TR', 'DISSOLUTION_COMMENCEMENT_NO_AR_XPRO', 'DISSOLUTION_COMMENCEMENT_NO_TR_XPRO', 'INTENT_TO_DISSOLVE', 'INTENT_TO_DISSOLVE_XPRO', 'CORP_DISSOLVED', 'CORP_DISSOLVED_XPRO', name='furnishing_name'),
               type_=sa.Enum('DISSOLUTION_COMMENCEMENT_NO_AR', 'DISSOLUTION_COMMENCEMENT_NO_TR', 'DISSOLUTION_COMMENCEMENT_NO_AR_XPRO', 'DISSOLUTION_COMMENCEMENT_NO_TR_XPRO', 'INTENT_TO_DISSOLVE', 'INTENT_TO_DISSOLVE_XPRO', 'CORP_DISSOLVED', 'CORP_DISSOLVED_XPRO', name='furnishingname'),
               existing_nullable=False)
    op.alter_column('furnishings', 'status',
               existing_type=postgresql.ENUM('QUEUED', 'PROCESSED', 'FAILED', name='furnishing_status'),
               type_=sa.Enum('QUEUED', 'PROCESSED', 'FAILED', name='furnishingstatus'),
               existing_nullable=False)
    op.alter_column('furnishings', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('furnishings', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_furnishings_batch_id'), 'furnishings', ['batch_id'], unique=False)
    op.create_index(op.f('ix_furnishings_business_id'), 'furnishings', ['business_id'], unique=False)
    op.alter_column('jurisdictions', 'country',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('jurisdictions_version', 'country',
               existing_type=sa.VARCHAR(length=10),
               nullable=True,
               autoincrement=False)
    op.alter_column('jurisdictions_version', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.alter_column('jurisdictions_version', 'filing_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.drop_constraint('jurisdictions_version_filing_id_fkey', 'jurisdictions_version', type_='foreignkey')
    op.drop_constraint('jurisdictions_version_business_id_fkey', 'jurisdictions_version', type_='foreignkey')
    op.alter_column('naics_elements', 'element_type',
               existing_type=postgresql.ENUM('ALL_EXAMPLES', 'ILLUSTRATIVE_EXAMPLES', 'INCLUSIONS', 'EXCLUSIONS', name='element_type'),
               type_=sa.Enum('ALL_EXAMPLES', 'ILLUSTRATIVE_EXAMPLES', 'INCLUSIONS', 'EXCLUSIONS', name='elementtype'),
               existing_nullable=False)
    op.alter_column('naics_elements', 'naics_structure_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_naics_element_class_title', table_name='naics_elements')
    op.drop_index('ix_naics_element_code', table_name='naics_elements')
    op.drop_index('ix_naics_element_element_desc', table_name='naics_elements')
    op.drop_index('ix_naics_element_element_type', table_name='naics_elements')
    op.drop_index('ix_naics_element_level', table_name='naics_elements')
    op.drop_index('ix_naics_element_version', table_name='naics_elements')
    op.drop_index('ix_naics_element_year', table_name='naics_elements')
    op.create_index(op.f('ix_naics_elements_class_title'), 'naics_elements', ['class_title'], unique=False)
    op.create_index(op.f('ix_naics_elements_code'), 'naics_elements', ['code'], unique=False)
    op.create_index(op.f('ix_naics_elements_element_description'), 'naics_elements', ['element_description'], unique=False)
    op.create_index(op.f('ix_naics_elements_element_type'), 'naics_elements', ['element_type'], unique=False)
    op.create_index(op.f('ix_naics_elements_level'), 'naics_elements', ['level'], unique=False)
    op.create_index(op.f('ix_naics_elements_naics_structure_id'), 'naics_elements', ['naics_structure_id'], unique=False)
    op.create_index(op.f('ix_naics_elements_version'), 'naics_elements', ['version'], unique=False)
    op.create_index(op.f('ix_naics_elements_year'), 'naics_elements', ['year'], unique=False)
    op.drop_index('ix_naics_structure_class_defn', table_name='naics_structures')
    op.drop_index('ix_naics_structure_class_title', table_name='naics_structures')
    op.drop_index('ix_naics_structure_code', table_name='naics_structures')
    op.drop_index('ix_naics_structure_level', table_name='naics_structures')
    op.drop_index('ix_naics_structure_version', table_name='naics_structures')
    op.drop_index('ix_naics_structure_year', table_name='naics_structures')
    op.create_index(op.f('ix_naics_structures_class_definition'), 'naics_structures', ['class_definition'], unique=False)
    op.create_index(op.f('ix_naics_structures_class_title'), 'naics_structures', ['class_title'], unique=False)
    op.create_index(op.f('ix_naics_structures_code'), 'naics_structures', ['code'], unique=False)
    op.create_index(op.f('ix_naics_structures_level'), 'naics_structures', ['level'], unique=False)
    op.create_index(op.f('ix_naics_structures_version'), 'naics_structures', ['version'], unique=False)
    op.create_index(op.f('ix_naics_structures_year'), 'naics_structures', ['year'], unique=False)
    op.drop_index('ix_offices_office_type', table_name='offices')
    op.drop_index('ix_offices_version_office_type', table_name='offices_version')
    op.drop_index('ix_parties_delivery_address_id', table_name='parties')
    op.drop_index('ix_parties_email', table_name='parties')
    op.drop_index('ix_parties_identifier', table_name='parties')
    op.drop_index('ix_parties_last_name', table_name='parties')
    op.drop_index('ix_parties_mailing_address_id', table_name='parties')
    op.drop_index('ix_parties_organization_name', table_name='parties')
    op.drop_index('ix_parties_party_type', table_name='parties')
    op.drop_index('ix_parties_version_delivery_address_id', table_name='parties_version')
    op.drop_index('ix_parties_version_email', table_name='parties_version')
    op.drop_index('ix_parties_version_identifier', table_name='parties_version')
    op.drop_index('ix_parties_version_last_name', table_name='parties_version')
    op.drop_index('ix_parties_version_mailing_address_id', table_name='parties_version')
    op.drop_index('ix_parties_version_organization_name', table_name='parties_version')
    op.drop_index('ix_parties_version_party_type', table_name='parties_version')
    op.drop_index('ix_party_roles_business_id', table_name='party_roles')
    op.drop_index('ix_party_roles_filing_id', table_name='party_roles')
    op.drop_index('ix_party_roles_party_id', table_name='party_roles')
    op.drop_index('ix_party_roles_role', table_name='party_roles')
    op.drop_index('ix_party_roles_version_business_id', table_name='party_roles_version')
    op.drop_index('ix_party_roles_version_filing_id', table_name='party_roles_version')
    op.drop_index('ix_party_roles_version_party_id', table_name='party_roles_version')
    op.drop_index('ix_party_roles_version_role', table_name='party_roles_version')
    op.alter_column('request_tracker', 'request_type',
               existing_type=postgresql.ENUM('INFORM_CRA', 'GET_BN', 'CHANGE_STATUS', 'CHANGE_NAME', 'CHANGE_DELIVERY_ADDRESS', 'CHANGE_MAILING_ADDRESS', 'CHANGE_PARTY', name='request_tracker_type'),
               type_=sa.Enum('INFORM_CRA', 'GET_BN', 'CHANGE_DELIVERY_ADDRESS', 'CHANGE_MAILING_ADDRESS', 'CHANGE_NAME', 'CHANGE_STATUS', 'CHANGE_PARTY', name='requesttype'),
               existing_nullable=False)
    op.alter_column('request_tracker', 'service_name',
               existing_type=postgresql.ENUM('BN_HUB', name='request_tracker_servicename'),
               type_=sa.Enum('BN_HUB', name='servicename'),
               existing_nullable=False)
    op.alter_column('request_tracker', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('resolutions_version', 'resolution_date',
               existing_type=sa.DATE(),
               nullable=True,
               autoincrement=False)
    op.alter_column('resolutions_version', 'type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               autoincrement=False)
    op.alter_column('review_results', 'status',
               existing_type=postgresql.ENUM('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='review_status'),
               type_=sa.Enum('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='reviewstatus'),
               existing_nullable=False)
    op.alter_column('reviews', 'status',
               existing_type=postgresql.ENUM('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='review_status'),
               type_=sa.Enum('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='reviewstatus'),
               existing_nullable=False)
    op.drop_index('ix_user_idp_userid', table_name='users')
    op.drop_constraint('users_idp_userid_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_idp_userid'), 'users', ['idp_userid'], unique=False)
    op.create_index(op.f('ix_users_version_idp_userid'), 'users_version', ['idp_userid'], unique=False)
    op.alter_column('xml_payloads', 'payload',
               existing_type=sa.NullType(),
               nullable=True)
    op.alter_column('xml_payloads', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('xml_payloads', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('xml_payloads', 'payload',
               existing_type=sa.NullType(),
               nullable=False)
    op.drop_index(op.f('ix_users_version_idp_userid'), table_name='users_version')
    op.drop_index(op.f('ix_users_idp_userid'), table_name='users')
    op.create_unique_constraint('users_idp_userid_key', 'users', ['idp_userid'])
    op.create_index('ix_user_idp_userid', 'users', ['idp_userid'], unique=False)
    op.alter_column('reviews', 'status',
               existing_type=sa.Enum('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='reviewstatus'),
               type_=postgresql.ENUM('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='review_status'),
               existing_nullable=False)
    op.alter_column('review_results', 'status',
               existing_type=sa.Enum('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='reviewstatus'),
               type_=postgresql.ENUM('AWAITING_REVIEW', 'CHANGE_REQUESTED', 'RESUBMITTED', 'APPROVED', 'REJECTED', name='review_status'),
               existing_nullable=False)
    op.alter_column('resolutions_version', 'type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               autoincrement=False)
    op.alter_column('resolutions_version', 'resolution_date',
               existing_type=sa.DATE(),
               nullable=False,
               autoincrement=False)
    op.alter_column('request_tracker', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('request_tracker', 'service_name',
               existing_type=sa.Enum('BN_HUB', name='servicename'),
               type_=postgresql.ENUM('BN_HUB', name='request_tracker_servicename'),
               existing_nullable=False)
    op.alter_column('request_tracker', 'request_type',
               existing_type=sa.Enum('INFORM_CRA', 'GET_BN', 'CHANGE_DELIVERY_ADDRESS', 'CHANGE_MAILING_ADDRESS', 'CHANGE_NAME', 'CHANGE_STATUS', 'CHANGE_PARTY', name='requesttype'),
               type_=postgresql.ENUM('INFORM_CRA', 'GET_BN', 'CHANGE_STATUS', 'CHANGE_NAME', 'CHANGE_DELIVERY_ADDRESS', 'CHANGE_MAILING_ADDRESS', 'CHANGE_PARTY', name='request_tracker_type'),
               existing_nullable=False)
    op.create_index('ix_party_roles_version_role', 'party_roles_version', ['role'], unique=False)
    op.create_index('ix_party_roles_version_party_id', 'party_roles_version', ['party_id'], unique=False)
    op.create_index('ix_party_roles_version_filing_id', 'party_roles_version', ['filing_id'], unique=False)
    op.create_index('ix_party_roles_version_business_id', 'party_roles_version', ['business_id'], unique=False)
    op.create_index('ix_party_roles_role', 'party_roles', ['role'], unique=False)
    op.create_index('ix_party_roles_party_id', 'party_roles', ['party_id'], unique=False)
    op.create_index('ix_party_roles_filing_id', 'party_roles', ['filing_id'], unique=False)
    op.create_index('ix_party_roles_business_id', 'party_roles', ['business_id'], unique=False)
    op.create_index('ix_parties_version_party_type', 'parties_version', ['party_type'], unique=False)
    op.create_index('ix_parties_version_organization_name', 'parties_version', ['organization_name'], unique=False)
    op.create_index('ix_parties_version_mailing_address_id', 'parties_version', ['mailing_address_id'], unique=False)
    op.create_index('ix_parties_version_last_name', 'parties_version', ['last_name'], unique=False)
    op.create_index('ix_parties_version_identifier', 'parties_version', ['identifier'], unique=False)
    op.create_index('ix_parties_version_email', 'parties_version', ['email'], unique=False)
    op.create_index('ix_parties_version_delivery_address_id', 'parties_version', ['delivery_address_id'], unique=False)
    op.create_index('ix_parties_party_type', 'parties', ['party_type'], unique=False)
    op.create_index('ix_parties_organization_name', 'parties', ['organization_name'], unique=False)
    op.create_index('ix_parties_mailing_address_id', 'parties', ['mailing_address_id'], unique=False)
    op.create_index('ix_parties_last_name', 'parties', ['last_name'], unique=False)
    op.create_index('ix_parties_identifier', 'parties', ['identifier'], unique=False)
    op.create_index('ix_parties_email', 'parties', ['email'], unique=False)
    op.create_index('ix_parties_delivery_address_id', 'parties', ['delivery_address_id'], unique=False)
    op.create_index('ix_offices_version_office_type', 'offices_version', ['office_type'], unique=False)
    op.create_index('ix_offices_office_type', 'offices', ['office_type'], unique=False)
    op.drop_index(op.f('ix_naics_structures_year'), table_name='naics_structures')
    op.drop_index(op.f('ix_naics_structures_version'), table_name='naics_structures')
    op.drop_index(op.f('ix_naics_structures_level'), table_name='naics_structures')
    op.drop_index(op.f('ix_naics_structures_code'), table_name='naics_structures')
    op.drop_index(op.f('ix_naics_structures_class_title'), table_name='naics_structures')
    op.drop_index(op.f('ix_naics_structures_class_definition'), table_name='naics_structures')
    op.create_index('ix_naics_structure_year', 'naics_structures', ['year'], unique=False)
    op.create_index('ix_naics_structure_version', 'naics_structures', ['version'], unique=False)
    op.create_index('ix_naics_structure_level', 'naics_structures', ['level'], unique=False)
    op.create_index('ix_naics_structure_code', 'naics_structures', ['code'], unique=False)
    op.create_index('ix_naics_structure_class_title', 'naics_structures', ['class_title'], unique=False)
    op.create_index('ix_naics_structure_class_defn', 'naics_structures', ['class_definition'], unique=False)
    op.drop_index(op.f('ix_naics_elements_year'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_version'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_naics_structure_id'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_level'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_element_type'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_element_description'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_code'), table_name='naics_elements')
    op.drop_index(op.f('ix_naics_elements_class_title'), table_name='naics_elements')
    op.create_index('ix_naics_element_year', 'naics_elements', ['year'], unique=False)
    op.create_index('ix_naics_element_version', 'naics_elements', ['version'], unique=False)
    op.create_index('ix_naics_element_level', 'naics_elements', ['level'], unique=False)
    op.create_index('ix_naics_element_element_type', 'naics_elements', ['element_type'], unique=False)
    op.create_index('ix_naics_element_element_desc', 'naics_elements', ['element_description'], unique=False)
    op.create_index('ix_naics_element_code', 'naics_elements', ['code'], unique=False)
    op.create_index('ix_naics_element_class_title', 'naics_elements', ['class_title'], unique=False)
    op.alter_column('naics_elements', 'naics_structure_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('naics_elements', 'element_type',
               existing_type=sa.Enum('ALL_EXAMPLES', 'ILLUSTRATIVE_EXAMPLES', 'INCLUSIONS', 'EXCLUSIONS', name='elementtype'),
               type_=postgresql.ENUM('ALL_EXAMPLES', 'ILLUSTRATIVE_EXAMPLES', 'INCLUSIONS', 'EXCLUSIONS', name='element_type'),
               existing_nullable=False)
    op.create_foreign_key('jurisdictions_version_business_id_fkey', 'jurisdictions_version', 'businesses', ['business_id'], ['id'])
    op.create_foreign_key('jurisdictions_version_filing_id_fkey', 'jurisdictions_version', 'filings', ['filing_id'], ['id'])
    op.alter_column('jurisdictions_version', 'filing_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.alter_column('jurisdictions_version', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.alter_column('jurisdictions_version', 'country',
               existing_type=sa.VARCHAR(length=10),
               nullable=False,
               autoincrement=False)
    op.alter_column('jurisdictions', 'country',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
    op.drop_index(op.f('ix_furnishings_business_id'), table_name='furnishings')
    op.drop_index(op.f('ix_furnishings_batch_id'), table_name='furnishings')
    op.alter_column('furnishings', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('furnishings', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('furnishings', 'status',
               existing_type=sa.Enum('QUEUED', 'PROCESSED', 'FAILED', name='furnishingstatus'),
               type_=postgresql.ENUM('QUEUED', 'PROCESSED', 'FAILED', name='furnishing_status'),
               existing_nullable=False)
    op.alter_column('furnishings', 'furnishing_name',
               existing_type=sa.Enum('DISSOLUTION_COMMENCEMENT_NO_AR', 'DISSOLUTION_COMMENCEMENT_NO_TR', 'DISSOLUTION_COMMENCEMENT_NO_AR_XPRO', 'DISSOLUTION_COMMENCEMENT_NO_TR_XPRO', 'INTENT_TO_DISSOLVE', 'INTENT_TO_DISSOLVE_XPRO', 'CORP_DISSOLVED', 'CORP_DISSOLVED_XPRO', name='furnishingname'),
               type_=postgresql.ENUM('DISSOLUTION_COMMENCEMENT_NO_AR', 'DISSOLUTION_COMMENCEMENT_NO_TR', 'DISSOLUTION_COMMENCEMENT_NO_AR_XPRO', 'DISSOLUTION_COMMENCEMENT_NO_TR_XPRO', 'INTENT_TO_DISSOLVE', 'INTENT_TO_DISSOLVE_XPRO', 'CORP_DISSOLVED', 'CORP_DISSOLVED_XPRO', name='furnishing_name'),
               existing_nullable=False)
    op.alter_column('furnishings', 'furnishing_type',
               existing_type=sa.Enum('EMAIL', 'MAIL', 'GAZETTE', name='furnishingtype'),
               type_=postgresql.ENUM('EMAIL', 'MAIL', 'GAZETTE', name='furnishing_type'),
               existing_nullable=False)
    op.drop_index(op.f('ix_furnishing_groups_xml_payload_id'), table_name='furnishing_groups')
    op.create_index('ix_filings_submitter_id_ccold3', 'filings', ['submitter_id'], unique=False)
    op.create_index('ix_filings_submitter_id_ccold2', 'filings', ['submitter_id'], unique=False)
    op.create_index('ix_filings_submitter_id_ccold1', 'filings', ['submitter_id'], unique=False)
    op.create_index('ix_filings_submitter_id_ccold', 'filings', ['submitter_id'], unique=False)
    op.create_index('ix_filings_submitter_id', 'filings', ['submitter_id'], unique=False)
    op.create_index('ix_filings_status_ccold3', 'filings', ['status'], unique=False)
    op.create_index('ix_filings_status_ccold2', 'filings', ['status'], unique=False)
    op.create_index('ix_filings_status_ccold1', 'filings', ['status'], unique=False)
    op.create_index('ix_filings_status_ccold', 'filings', ['status'], unique=False)
    op.create_index('ix_filings_status', 'filings', ['status'], unique=False)
    op.create_index('ix_filings_filing_type_ccold3', 'filings', ['filing_type'], unique=False)
    op.create_index('ix_filings_filing_type_ccold2', 'filings', ['filing_type'], unique=False)
    op.create_index('ix_filings_filing_type_ccold1', 'filings', ['filing_type'], unique=False)
    op.create_index('ix_filings_filing_type_ccold', 'filings', ['filing_type'], unique=False)
    op.create_index('ix_filings_filing_type', 'filings', ['filing_type'], unique=False)
    op.create_index('ix_filings_business_id_ccold3', 'filings', ['business_id'], unique=False)
    op.create_index('ix_filings_business_id_ccold2', 'filings', ['business_id'], unique=False)
    op.create_index('ix_filings_business_id_ccold1', 'filings', ['business_id'], unique=False)
    op.create_index('ix_filings_business_id_ccold', 'filings', ['business_id'], unique=False)
    op.create_index('ix_filings_business_id', 'filings', ['business_id'], unique=False)
    op.create_index('filings_pkey_ccold3', 'filings', ['id'], unique=False)
    op.create_index('filings_pkey_ccold2', 'filings', ['id'], unique=False)
    op.create_index('filings_pkey_ccold1', 'filings', ['id'], unique=False)
    op.create_index('filings_pkey_ccold', 'filings', ['id'], unique=False)
    op.alter_column('filings', 'withdrawal_pending',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('filings', 'hide_in_ledger',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.create_foreign_key('documents_version_business_id_fkey', 'documents_version', 'businesses', ['business_id'], ['id'])
    op.create_foreign_key('documents_version_filing_id_fkey', 'documents_version', 'filings', ['filing_id'], ['id'])
    op.alter_column('documents_version', 'file_key',
               existing_type=sa.VARCHAR(length=100),
               nullable=False,
               autoincrement=False)
    op.alter_column('documents_version', 'type',
               existing_type=sa.VARCHAR(length=30),
               nullable=False,
               autoincrement=False)
    op.alter_column('dc_credentials', 'business_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('dc_credentials', 'definition_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('dc_credentials', 'connection_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('dc_connections', 'business_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('dc_connections', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint('dc_business_users_business_id_user_id_uq', 'dc_business_users', ['business_id', 'user_id'])
    op.drop_constraint(None, 'consent_continuation_outs', type_='unique')
    op.alter_column('consent_continuation_outs', 'consent_type',
               existing_type=sa.Enum('continuation_out', 'amalgamation_out', name='consenttypes'),
               type_=postgresql.ENUM('continuation_out', 'amalgamation_out', name='consent_out_types'),
               existing_nullable=False,
               existing_server_default=sa.text("'continuation_out'::consent_out_types"))
    op.drop_constraint(None, 'configurations', type_='unique')
    op.alter_column('businesses_version', 'naics_description',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=300),
               existing_nullable=True,
               autoincrement=False)
    op.drop_column('businesses_version', 'in_liquidation')
    op.create_foreign_key('businesses_state_filing_id_fkey', 'businesses', 'filings', ['state_filing_id'], ['id'])
    op.alter_column('businesses', 'naics_description',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=300),
               existing_nullable=True)
    op.drop_column('businesses', 'in_liquidation')
    op.alter_column('batches', 'start_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('batches', 'status',
               existing_type=sa.Enum('HOLD', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'ERROR', name='batchstatus'),
               type_=postgresql.ENUM('HOLD', 'PROCESSING', 'COMPLETED', 'CANCELLED', 'ERROR', name='batch_status'),
               existing_nullable=False)
    op.alter_column('batches', 'batch_type',
               existing_type=sa.Enum('INVOLUNTARY_DISSOLUTION', name='batchtype'),
               type_=postgresql.ENUM('INVOLUNTARY_DISSOLUTION', name='batch_type'),
               existing_nullable=False)
    op.drop_index(op.f('ix_batch_processing_filing_id'), table_name='batch_processing')
    op.drop_index(op.f('ix_batch_processing_business_id'), table_name='batch_processing')
    op.drop_index(op.f('ix_batch_processing_batch_id'), table_name='batch_processing')
    op.alter_column('batch_processing', 'last_modified',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('batch_processing', 'created_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('batch_processing', 'status',
               existing_type=sa.Enum('HOLD', 'PROCESSING', 'QUEUED', 'WITHDRAWN', 'COMPLETED', 'ERROR', name='batchprocessingstatus'),
               type_=postgresql.ENUM('COMPLETED', 'ERROR', 'HOLD', 'PROCESSING', 'QUEUED', 'WITHDRAWN', name='batch_processing_status'),
               existing_nullable=False)
    op.alter_column('batch_processing', 'step',
               existing_type=sa.Enum('WARNING_LEVEL_1', 'WARNING_LEVEL_2', 'DISSOLUTION', name='batchprocessingstep'),
               type_=postgresql.ENUM('WARNING_LEVEL_1', 'WARNING_LEVEL_2', 'DISSOLUTION', name='batch_processing_step'),
               existing_nullable=False)
    op.create_foreign_key('amalgamations_version_business_id_fkey', 'amalgamations_version', 'businesses', ['business_id'], ['id'])
    op.create_foreign_key('amalgamations_version_filing_id_fkey', 'amalgamations_version', 'filings', ['filing_id'], ['id'])
    op.create_index('ix_amalgamations_version_filing_id', 'amalgamations_version', ['filing_id'], unique=False)
    op.alter_column('amalgamations_version', 'filing_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'court_approval',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'amalgamation_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               autoincrement=False)
    op.alter_column('amalgamations_version', 'amalgamation_type',
               existing_type=sa.Enum('regular', 'vertical', 'horizontal', 'unknown', name='amalgamationtypes'),
               type_=postgresql.ENUM('regular', 'vertical', 'horizontal', 'unknown', name='amalgamation_type'),
               nullable=False,
               autoincrement=False)
    op.drop_index(op.f('ix_amalgamations_business_id'), table_name='amalgamations')
    op.alter_column('amalgamations', 'business_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('amalgamations', 'court_approval',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('amalgamations', 'amalgamation_type',
               existing_type=sa.Enum('regular', 'vertical', 'horizontal', 'unknown', name='amalgamationtypes'),
               type_=postgresql.ENUM('regular', 'vertical', 'horizontal', 'unknown', name='amalgamation_type'),
               existing_nullable=False)
    op.create_foreign_key('amalgamating_businesses_version_business_id_fkey', 'amalgamating_businesses_version', 'businesses', ['business_id'], ['id'])
    op.create_index('ix_amalgamating_businesses_version_amalgamation_id', 'amalgamating_businesses_version', ['amalgamation_id'], unique=False)
    op.alter_column('amalgamating_businesses_version', 'amalgamation_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.alter_column('amalgamating_businesses_version', 'role',
               existing_type=sa.Enum('amalgamating', 'holding', 'primary', name='role'),
               type_=postgresql.ENUM('amalgamating', 'holding', 'primary', name='amalgamating_business_role'),
               nullable=False,
               autoincrement=False)
    op.drop_constraint(None, 'amalgamating_businesses', type_='foreignkey')
    op.create_foreign_key('amalgamating_business_amalgamation_id_fkey', 'amalgamating_businesses', 'amalgamations', ['amalgamation_id'], ['id'])
    op.drop_index(op.f('ix_amalgamating_businesses_business_id'), table_name='amalgamating_businesses')
    op.alter_column('amalgamating_businesses', 'role',
               existing_type=sa.Enum('amalgamating', 'holding', 'primary', name='role'),
               type_=postgresql.ENUM('amalgamating', 'holding', 'primary', name='amalgamating_business_role'),
               existing_nullable=False)
    op.alter_column('aliases_version', 'type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               autoincrement=False)
    op.alter_column('aliases_version', 'alias',
               existing_type=sa.VARCHAR(length=1000),
               nullable=False,
               autoincrement=False)
    op.create_index('ix_addresses_version_office_id', 'addresses_version', ['office_id'], unique=False)
    op.create_index('ix_addresses_office_id', 'addresses', ['office_id'], unique=False)
    op.create_table('offices_held',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('party_role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', postgresql.ENUM('CEO', 'CFO', 'CHAIR', 'OTHER_OFFICES', 'TREASURER', 'VICE_PRESIDENT', 'PRESIDENT', 'SECRETARY', 'ASSISTANT_SECRETARY', name='titles_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['party_role_id'], ['party_roles.id'], name='offices_held_party_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='offices_held_pkey')
    )
    op.create_table('x',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filing_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('filing_type', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.Column('filing_json', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.VARCHAR(length=4096), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('business_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('submitter_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('colin_event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('payment_completion_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True)
    )
    op.create_table('temp2_businesses',
    sa.Column('legal_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('recognition_dt', sa.VARCHAR(length=17), autoincrement=False, nullable=True),
    sa.Column('dissolution_dt', sa.VARCHAR(length=17), autoincrement=False, nullable=True),
    sa.Column('corp_num', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('legal_type', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('admin_freeze', sa.VARCHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('naics_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=300), autoincrement=False, nullable=True)
    )
    op.create_table('auth_users',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('keycloak_guid', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('modified_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_terms_of_use_accepted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('terms_of_use_accepted_version', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('idp_userid', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('login_source', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('login_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.create_table('temp_businesses',
    sa.Column('tmpstr', sa.VARCHAR(length=6000), autoincrement=False, nullable=True)
    )
    op.create_table('sent_to_gazette',
    sa.Column('filing_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('identifier', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('sent_to_gazette_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('filing_id', name='sent_to_gazette_pkey')
    )
    op.create_table('offices_held_version',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('party_role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('title', postgresql.ENUM('CEO', 'CFO', 'CHAIR', 'OTHER_OFFICES', 'TREASURER', 'VICE_PRESIDENT', 'PRESIDENT', 'SECRETARY', 'ASSISTANT_SECRETARY', name='titles_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['party_role_id'], ['party_roles.id'], name='offices_held_version_party_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'transaction_id', name='offices_held_version_pkey')
    )
    op.create_table('businesses_bak',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_ledger_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_remote_ledger_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_ar_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('legal_name', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('founding_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('dissolution_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('identifier', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('fiscal_year_end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('submitter_userid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_agm_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_ledger_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('legal_type', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('restriction_ind', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_ar_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('association_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_coa_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cod_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('state', postgresql.ENUM('ACTIVE', 'HISTORICAL', 'LIQUIDATION', name='state'), autoincrement=False, nullable=True),
    sa.Column('admin_freeze', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('state_filing_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('naics_key', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('naics_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('naics_description', sa.VARCHAR(length=300), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
